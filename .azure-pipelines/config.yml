variables:
  - name: COVERAGE_DIR
    value: coverage
  - name: NODE_VERSION
    value: '>=10.16.0'
  - name: REPORTS_DIR
    value: reports
  - name: YARN_CACHE_DIR
    value: $(Pipeline.Workspace)/.yarn
stages:
  - stage: root
    displayName: Root
    jobs:
      - job: setup
        displayName: Setup
        pool:
          vmImage: ubuntu-16.04
        steps:
          - task: NodeTool@0
            displayName: Install Node
            inputs:
              versionSpec: $(NODE_VERSION)
          - script: mkdir --parents $(COVERAGE_DIR) $(REPORTS_DIR) $(YARN_CACHE_DIR)
            displayName: Create cache directories
          - template: templates/cache-coverage.yml
            parameters:
              path: $(COVERAGE_DIR)
          - template: templates/cache-reports.yml
            parameters:
              path: $(REPORTS_DIR)
          - template: templates/cache-yarn-packages.yml
            parameters:
              path: $(YARN_CACHE_DIR)
          - script: yarn install --cache-folder $(YARN_CACHE_DIR) --frozen-lockfile
            displayName: Install Node dependencies
      - job: static_analysis
        displayName: Static Analysis
        dependsOn:
          - setup
        pool:
          vmImage: ubuntu-16.04
        steps:
          - task: NodeTool@0
            displayName: Install Node
            inputs:
              versionSpec: $(NODE_VERSION)
          - template: templates/cache-reports.yml
            parameters:
              path: $(REPORTS_DIR)
          - template: templates/cache-yarn-packages.yml
            parameters:
              path: $(YARN_CACHE_DIR)
          - script: yarn install --cache-folder $(YARN_CACHE_DIR) --frozen-lockfile
            displayName: Install Node dependencies
          - script: yarn --silent lint:scripts --format junit --output-file $(REPORTS_DIR)/lint-scripts.xml
            displayName: Lint scripts
          - script: yarn --silent lint:styles --custom-formatter node_modules/stylelint-junit-formatter > $(REPORTS_DIR)/lint-styles.xml
            displayName: Lint styles
          - script: yarn --silent lint:types
            displayName: Lint types
          - task: PublishTestResults@2
            displayName: Publish tests results
            condition: succeededOrFailed()
            inputs:
              testResultsFiles: '**/*.xml'
              searchFolder: $(System.DefaultWorkingDirectory)/$(REPORTS_DIR)
      - job: test
        displayName: Test
        dependsOn:
          - setup
        pool:
          vmImage: ubuntu-16.04
        steps:
          - task: NodeTool@0
            displayName: Install Node
            inputs:
              versionSpec: $(NODE_VERSION)
          - template: templates/cache-coverage.yml
            parameters:
              path: $(COVERAGE_DIR)
          - template: templates/cache-reports.yml
            parameters:
              path: $(REPORTS_DIR)
          - template: templates/cache-yarn-packages.yml
            parameters:
              path: $(YARN_CACHE_DIR)
          - script: yarn install --cache-folder $(YARN_CACHE_DIR) --frozen-lockfile
            displayName: Install Node dependencies
          - script: yarn --silent test:units --coverage --coverageDirectory $(COVERAGE_DIR) --runInBand --reporters default jest-junit
            displayName: Test units
            env:
              JEST_JUNIT_OUTPUT: $(REPORTS_DIR)/test-units.xml
          - script: yarn codecov -t $(CODECOV_TOKEN)
            displayName: Publish code coverage results
          - task: PublishTestResults@2
            displayName: Publish tests results
            condition: succeededOrFailed()
            inputs:
              testResultsFiles: '**/*.xml'
              searchFolder: $(System.DefaultWorkingDirectory)/$(REPORTS_DIR)
      - job: publish
        displayName: Publish
        dependsOn:
          - static_analysis
          - test
        pool:
          vmImage: ubuntu-16.04
        steps:
          - template: templates/cache-coverage.yml
            parameters:
              path: $(COVERAGE_DIR)
          - template: templates/cache-reports.yml
            parameters:
              path: $(REPORTS_DIR)
          - publish: $(COVERAGE_DIR)
            displayName: Publish coverage artifact
            artifact: coverage
          - publish: $(REPORTS_DIR)
            displayName: Publish reports artifact
            artifact: reports
trigger:
  branches:
    include:
      - master
pr:
  branches:
    include:
      - master
